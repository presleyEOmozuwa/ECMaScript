{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchMovies } from './MovieService';\nconst MovieView = () => {\n  _s();\n  const movies = useSelector(state => state.movie.movies);\n  const error = useSelector(state => state.movie.error);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchMovies());\n  }, [dispatch]);\n  if (!error) {}\n};\n_s(MovieView, \"z5Q1EdCz6ZT/TC6jnSZxFP1mfJE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = MovieView;\nexport default MovieView;\nvar _c;\n$RefreshReg$(_c, \"MovieView\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","fetchMovies","MovieView","movies","state","movie","error","dispatch"],"sources":["/Users/presleyomozuwa/Desktop/AppManager/react-redux-toolkit/src/features/movie/MovieView.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchMovies, } from './MovieService';\n\nconst MovieView = () => {\n\n    const movies = useSelector((state) => state.movie.movies);\n    const error = useSelector((state) => state.movie.error);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchMovies());\n    }, [dispatch]);\n\n    if (!error) {\n        \n    }\n\n};\n\nexport default MovieView;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAS,gBAAgB;AAE7C,MAAMC,SAAS,GAAG,MAAM;EAAA;EAEpB,MAAMC,MAAM,GAAGJ,WAAW,CAAEK,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACF,MAAM,CAAC;EACzD,MAAMG,KAAK,GAAGP,WAAW,CAAEK,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,KAAK,CAAC;EACvD,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAE9BF,SAAS,CAAC,MAAM;IACZS,QAAQ,CAACN,WAAW,EAAE,CAAC;EAC3B,CAAC,EAAE,CAACM,QAAQ,CAAC,CAAC;EAEd,IAAI,CAACD,KAAK,EAAE,CAEZ;AAEJ,CAAC;AAAC,GAdIJ,SAAS;EAAA,QAEIH,WAAW,EACZA,WAAW,EACRC,WAAW;AAAA;AAAA,KAJ1BE,SAAS;AAgBf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}